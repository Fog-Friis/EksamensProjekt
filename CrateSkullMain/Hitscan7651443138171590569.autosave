int killCount=0;
class Pistol { 
int dir;
PVector pos = new PVector();
PVector pos2 = new PVector(1,1);
int posx, posy;
int maxDistance=width;  
boolean hit=false;
int maxBullets=20, currentBullets=20;
int minDistance = 1, yDistance, xDistance;
color c;
float fireRate;
int enemycount;
int damage;

  Pistol(PVector pos,int dir,int posx, int posy,boolean hit, int maxBullets,int currentBullets, int yDistance, int xDistance,color c, float fireRate, int damage) {
    this.pos = pos;
    this.dir = dir;
    this.posx = posx;
    this.posy = posy;
    this.hit = hit;
    this.maxBullets = maxBullets;
    this.currentBullets = currentBullets;
    this.yDistance = yDistance;
    this.xDistance = xDistance;
    this.c = c;
    this.fireRate = fireRate;
    this.damage = damage;
  }
void shoot() {
  println("q");
   if (currentBullets>0){
     //Ã†ndre senere til playerene der skyder
     println("pew pew");
     currentBullets -=1;
    pos =  pz.pos.copy(); 
     dir = pz.dir;
      //  println(dir);
         switch(dir) {
      case 0:
      yDistance = minDistance;
      xDistance = minDistance*0;
      break;
      case 1:
      yDistance = minDistance;
      xDistance = minDistance;
      break;
      case 2:
      yDistance = minDistance*0;
      xDistance = minDistance;
      break;
      case 3:
      yDistance = minDistance*-1;
      xDistance = minDistance;
      break;
      case 4:
      yDistance = minDistance*-1;
      xDistance = minDistance*0;
      break;
      case 5:
      yDistance = minDistance*-1;
      xDistance = minDistance*-1;
      break;
      case 6:
      yDistance = minDistance*0;
      xDistance = minDistance*-1;
      break;
      case 7:
      yDistance = minDistance*1;
      xDistance = minDistance*-1;
      break;
      }
      for (int i = minDistance; i < maxDistance;  i+= minDistance) {
      pos.y += yDistance;
      pos.x += xDistance;
     // pos.add(pos2);

      
      int posx = (int) pos.x;
      int posy = (int) pos.y;
      
      c = get(posx,posy);
      println(posx+"x"+posy+"y"+"farvekode:"+c);

      println(posx+"x"+posy+"y"+"farvekode:"+c);
      if ((c == -65526) //RGB(255,0,10)
      || c == (6579301) || //RGB(155)
      c == (-3355444)){ //RGB(155,0,155)
        if (c == (-65526))  { //RGB(255,0,10)
         hit = true; //Hit enemy
         println("hit");
         break; 
        }
         else if (c == (-3355444)) {
           //Hit shooter enemy
      }
          else {
          println("hit wall");
          break; //hit the wall}
      }
      }
      }
      if (hit==true){
  //  println("hit==true");
      enemycount = EnemyManager.Enemies.size(); 
  //    println(EnemyManager.Enemies.size());
      for (int x = 0; x <= enemycount;  x+= 1){
      // pos2 =  EM.Enemies.pos.copy();
        float d = pos.dist(pos2);
        if (d <= 50/2){
        //Enemies(x).life -= damage;
       // if (Enemies(x).life <= 0) {
       //Remove enemy  
        break;
        }
  }
  }
} 
else{
  println("no more ammo");
}
}
}
